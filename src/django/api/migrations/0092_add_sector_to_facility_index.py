# Generated by Django 2.2.24 on 2022-05-31 15:21

from django.contrib.postgres.fields import ArrayField
from django.db import migrations, models
from django.db.models import F, Func, OuterRef, Subquery


class ArraySubquery(Subquery):
    template = "ARRAY(%(subquery)s)"


def populate_sector_array(apps, schema_editor):
    FacilityIndex = apps.get_model('api', 'FacilityIndex')
    FacilityListItem = apps.get_model('api', 'FacilityListItem')

    sectors_for_facility = FacilityListItem \
        .objects \
        .filter(
            source__is_active=True,
            source__is_public=True,
            facilitymatch__is_active=True,
            facility_id=OuterRef('pk')) \
        .annotate(all_sectors=Func(F('sector'), function='unnest')) \
        .values_list('all_sectors', flat=True) \
        .distinct()

    FacilityIndex \
        .objects \
        .update(sector=ArraySubquery(sectors_for_facility, output_field=ArrayField(models.CharField())))



class Migration(migrations.Migration):

    dependencies = [
        ('api', '0091_add_sector_to_facility_list_item'),
    ]

    operations = [
        migrations.AddField(
            model_name='facilityindex',
            name='sector',
            field=ArrayField(base_field=models.CharField(help_text='The sector(s) for goods made at the facility', max_length=50), default=list, size=None),
        ),
        migrations.RunPython(populate_sector_array, migrations.RunPython.noop)
    ]
